// <auto-generated />
using System;
using BC7.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BC7.Database.Migrations
{
    [DbContext(typeof(BitClub7Context))]
    partial class BitClub7ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.3-servicing-35854")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BC7.Domain.MatrixPosition", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("DepthLevel");

                    b.Property<int>("Left");

                    b.Property<int>("MatrixLevel");

                    b.Property<Guid?>("ParentId");

                    b.Property<int>("Right");

                    b.Property<Guid?>("UserMultiAccountId");

                    b.HasKey("Id");

                    b.HasIndex("UserMultiAccountId");

                    b.ToTable("MatrixPositions");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0f7b51a5-dd67-4ac3-9409-6d2a558e750d"),
                            CreatedAt = new DateTime(2019, 4, 12, 13, 27, 18, 620, DateTimeKind.Utc).AddTicks(5333),
                            DepthLevel = 0,
                            Left = 1,
                            MatrixLevel = 0,
                            Right = 14,
                            UserMultiAccountId = new Guid("07d685e1-bed9-4598-8952-5a111f6fa15d")
                        },
                        new
                        {
                            Id = new Guid("1aba1a60-41d0-4812-b9f2-51faa2ec60d8"),
                            CreatedAt = new DateTime(2019, 4, 12, 13, 27, 18, 620, DateTimeKind.Utc).AddTicks(6228),
                            DepthLevel = 1,
                            Left = 2,
                            MatrixLevel = 0,
                            ParentId = new Guid("0f7b51a5-dd67-4ac3-9409-6d2a558e750d"),
                            Right = 7,
                            UserMultiAccountId = new Guid("9cab7bf8-5c11-4815-8acc-9f1dbcca6981")
                        },
                        new
                        {
                            Id = new Guid("f1e4ba54-5d4d-47fa-8481-e790db06bf58"),
                            CreatedAt = new DateTime(2019, 4, 12, 13, 27, 18, 620, DateTimeKind.Utc).AddTicks(6251),
                            DepthLevel = 1,
                            Left = 8,
                            MatrixLevel = 0,
                            ParentId = new Guid("0f7b51a5-dd67-4ac3-9409-6d2a558e750d"),
                            Right = 13,
                            UserMultiAccountId = new Guid("5e02e395-4869-4d6a-83f5-55aa8650e372")
                        },
                        new
                        {
                            Id = new Guid("9f0d2984-796e-444d-9bb1-3a403563d9d7"),
                            CreatedAt = new DateTime(2019, 4, 12, 13, 27, 18, 620, DateTimeKind.Utc).AddTicks(6251),
                            DepthLevel = 2,
                            Left = 3,
                            MatrixLevel = 0,
                            ParentId = new Guid("1aba1a60-41d0-4812-b9f2-51faa2ec60d8"),
                            Right = 4
                        },
                        new
                        {
                            Id = new Guid("f7b10f15-c7ec-4a0f-b7d2-c4b535b70681"),
                            CreatedAt = new DateTime(2019, 4, 12, 13, 27, 18, 620, DateTimeKind.Utc).AddTicks(6254),
                            DepthLevel = 2,
                            Left = 5,
                            MatrixLevel = 0,
                            ParentId = new Guid("1aba1a60-41d0-4812-b9f2-51faa2ec60d8"),
                            Right = 6
                        },
                        new
                        {
                            Id = new Guid("f9620432-d5fd-493c-b639-7e3a0b690fb4"),
                            CreatedAt = new DateTime(2019, 4, 12, 13, 27, 18, 620, DateTimeKind.Utc).AddTicks(6254),
                            DepthLevel = 2,
                            Left = 9,
                            MatrixLevel = 0,
                            ParentId = new Guid("f1e4ba54-5d4d-47fa-8481-e790db06bf58"),
                            Right = 10
                        },
                        new
                        {
                            Id = new Guid("250363c2-93b2-4f2b-bc5d-dde24b5a785e"),
                            CreatedAt = new DateTime(2019, 4, 12, 13, 27, 18, 620, DateTimeKind.Utc).AddTicks(6257),
                            DepthLevel = 2,
                            Left = 11,
                            MatrixLevel = 0,
                            ParentId = new Guid("f1e4ba54-5d4d-47fa-8481-e790db06bf58"),
                            Right = 12
                        });
                });

            modelBuilder.Entity("BC7.Domain.UserAccountData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BtcWalletAddress")
                        .IsRequired();

                    b.Property<string>("City")
                        .IsRequired();

                    b.Property<string>("Country")
                        .IsRequired();

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("FirstName")
                        .IsRequired();

                    b.Property<string>("Hash")
                        .IsRequired();

                    b.Property<bool>("IsMembershipFeePaid");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.Property<string>("Login")
                        .IsRequired();

                    b.Property<string>("Role")
                        .IsRequired();

                    b.Property<string>("Salt")
                        .IsRequired();

                    b.Property<string>("Street")
                        .IsRequired();

                    b.Property<string>("ZipCode")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Login")
                        .IsUnique();

                    b.ToTable("UserAccountsData");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20ce71dc-f322-4d31-a525-d567ec0e2c9a"),
                            BtcWalletAddress = "BtcWalletAddressRoot1",
                            City = "CityRoot1",
                            Country = "CountryRoot1",
                            CreatedAt = new DateTime(2019, 4, 12, 13, 27, 18, 618, DateTimeKind.Utc).AddTicks(4071),
                            Email = "EmailRoot1",
                            FirstName = "FirstNameRoot1",
                            Hash = "hash1",
                            IsMembershipFeePaid = true,
                            LastName = "LastNameRoot1",
                            Login = "LoginRoot1",
                            Role = "Root",
                            Salt = "salt1",
                            Street = "StreetRoot1",
                            ZipCode = "ZipCodeRoot1"
                        },
                        new
                        {
                            Id = new Guid("f8319492-31b4-4b44-a750-667838a114ee"),
                            BtcWalletAddress = "BtcWalletAddressRoot2",
                            City = "CityRoot2",
                            Country = "CountryRoot2",
                            CreatedAt = new DateTime(2019, 4, 12, 13, 27, 18, 618, DateTimeKind.Utc).AddTicks(5312),
                            Email = "EmailRoot2",
                            FirstName = "FirstNameRoot2",
                            Hash = "hash2",
                            IsMembershipFeePaid = true,
                            LastName = "LastNameRoot2",
                            Login = "LoginRoot2",
                            Role = "Root",
                            Salt = "salt2",
                            Street = "StreetRoot2",
                            ZipCode = "ZipCodeRoot2"
                        },
                        new
                        {
                            Id = new Guid("0ea1c2ff-b944-4aa8-98ec-a967cf7d7a65"),
                            BtcWalletAddress = "BtcWalletAddressRoot3",
                            City = "CityRoot3",
                            Country = "CountryRoot3",
                            CreatedAt = new DateTime(2019, 4, 12, 13, 27, 18, 618, DateTimeKind.Utc).AddTicks(5324),
                            Email = "EmailRoot3",
                            FirstName = "FirstNameRoot3",
                            Hash = "hash3",
                            IsMembershipFeePaid = true,
                            LastName = "LastNameRoot3",
                            Login = "LoginRoot3",
                            Role = "Root",
                            Salt = "salt3",
                            Street = "StreetRoot3",
                            ZipCode = "ZipCodeRoot3"
                        });
                });

            modelBuilder.Entity("BC7.Domain.UserMultiAccount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<bool>("IsMainAccount");

                    b.Property<string>("MultiAccountName");

                    b.Property<string>("RefLink");

                    b.Property<Guid?>("SponsorId");

                    b.Property<Guid>("UserAccountDataId");

                    b.HasKey("Id");

                    b.HasIndex("SponsorId");

                    b.HasIndex("UserAccountDataId");

                    b.ToTable("UserMultiAccounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("07d685e1-bed9-4598-8952-5a111f6fa15d"),
                            CreatedAt = new DateTime(2019, 4, 12, 13, 27, 18, 619, DateTimeKind.Utc).AddTicks(4607),
                            IsMainAccount = true,
                            MultiAccountName = "LoginRoot1",
                            RefLink = "111111",
                            UserAccountDataId = new Guid("20ce71dc-f322-4d31-a525-d567ec0e2c9a")
                        },
                        new
                        {
                            Id = new Guid("9cab7bf8-5c11-4815-8acc-9f1dbcca6981"),
                            CreatedAt = new DateTime(2019, 4, 12, 13, 27, 18, 619, DateTimeKind.Utc).AddTicks(8460),
                            IsMainAccount = true,
                            MultiAccountName = "LoginRoot2",
                            RefLink = "222222",
                            UserAccountDataId = new Guid("f8319492-31b4-4b44-a750-667838a114ee")
                        },
                        new
                        {
                            Id = new Guid("5e02e395-4869-4d6a-83f5-55aa8650e372"),
                            CreatedAt = new DateTime(2019, 4, 12, 13, 27, 18, 619, DateTimeKind.Utc).AddTicks(8484),
                            IsMainAccount = true,
                            MultiAccountName = "LoginRoot3",
                            RefLink = "333333",
                            UserAccountDataId = new Guid("0ea1c2ff-b944-4aa8-98ec-a967cf7d7a65")
                        });
                });

            modelBuilder.Entity("BC7.Domain.MatrixPosition", b =>
                {
                    b.HasOne("BC7.Domain.UserMultiAccount")
                        .WithMany("MatrixPositions")
                        .HasForeignKey("UserMultiAccountId");
                });

            modelBuilder.Entity("BC7.Domain.UserMultiAccount", b =>
                {
                    b.HasOne("BC7.Domain.UserMultiAccount", "Sponsor")
                        .WithMany()
                        .HasForeignKey("SponsorId");

                    b.HasOne("BC7.Domain.UserAccountData", "UserAccountData")
                        .WithMany("UserMultiAccounts")
                        .HasForeignKey("UserAccountDataId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
